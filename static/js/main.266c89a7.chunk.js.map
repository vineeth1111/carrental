{"version":3,"sources":["carLogo.png","helpers/History.js","Layout/Header.js","Layout/index.js","Components/Rental/RentalCard.js","Components/Rental/RentalSection.js","Components/Rental/index.js","Home/index.js","helpers/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","marginLeft","paddingLeft","appbar","background","height","alignContent","img","width","margin","padding","paddingRight","button","color","button2","Header","classes","console","log","AppBar","position","className","Toolbar","Button","variant","size","onClick","push","src","carLogo","alt","Typography","RentalCard","props","state","this","setState","Card","elevation","card","CardHeader","subheader","CardMedia","image","CardContent","CardActions","Component","withStyles","border","borderColor","marginBottom","marginTop","RentalSection","carArr","i","Rental","Home","paper","paddingTop","alignSelf","rental","Routes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.266c89a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carLogo.c841ecca.png\";","\nimport { createBrowserHistory as history} from 'history';\n\nexport default history();","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport carLogo from \"../carLogo.png\";\nimport history from \"../helpers/History\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: 0,\n    paddingLeft: 0,\n  },\n  appbar: {\n    background: \"#212121\",\n    height: 60,\n    alignContent: \"right\",\n  },\n  img: {\n    height: 40,\n    width: 60,\n    margin: 0,\n    padding: 0,\n    paddingRight: 3,\n  },\n  button: {\n    background: \"#212121\",\n    color: \"#f2f2f2\",\n  },\n  button2: {\n    background: \"#212121\",\n    color: \"#f2f2f2\",\n    marginRight: 0,\n    marginLeft: \"auto\",\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  console.log(\" Header REndered\");\n  return (\n    <AppBar position=\"static\" className={classes.appbar}>\n      <Toolbar>\n        <Button\n          variant=\"text\"\n          size=\"small\"\n          className={classes.button}\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          <img className={classes.img} src={carLogo} alt='logo' />\n          <Typography variant=\"h6\" className={classes.title}>\n            {\" \"}\n            CAR RENTAL\n          </Typography>\n        </Button>\n        <Button\n          variant=\"text\"\n          size=\"large\"\n          className={classes.button2}\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Dashboard\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Header;\n","import Header from './Header';\n\nexport default Header;","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  card: {\n    border: \"3px\",\n    borderColor: \"#2f2f2f\",\n    width: \"70%\",\n    margin: 'auto',\n    marginBottom:6,\n    marginTop:6\n  },\n};\n\nclass RentalCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillReceiveProps() {\n    this.setState({});\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Card elevation={2} className={classes.card}>\n          <CardHeader title=\"static title\" subheader=\"static sub\" />\n          <CardMedia\n            image=\"/static/images/cards/paella.jpg\"\n            title=\"Paella dish\"\n          />\n          <CardContent></CardContent>\n          <CardActions>\n            <Button> Book Now</Button>\n          </CardActions>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(RentalCard);\n","import React, {Component} from 'react';\nimport RentalCard from './RentalCard';\n\nclass RentalSection extends Component{\n\n    render(){\n\n        let carArr =[]\n        for(var i =0; i<5; i++){\n            carArr.push(<RentalCard/>)\n        }\n        return(\n            <div>\n                {carArr}\n            </div>\n        );\n    }\n}\nexport default RentalSection;","import React, {Component} from 'react';\nimport RentalSection from './RentalSection';\n\nclass Rental extends Component{\n\n    constructor(props){\n        super(props)\n        console.log(\"Rental page rendered\")\n\n        this.state ={\n\n        }\n    }\n\n    render(){\n        return(\n                <RentalSection/>  \n        );\n    }\n}\nexport default Rental;","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// import Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rental from '../Components/Rental';\n\nconst styles = {\n  paper: {\n    width: \"80%\",\n    height: 100,\n    paddingTop:10,\n    margin: \"auto\",\n  },\n  title: {\n    alignSelf: \"right\",\n  },\n  rental:{\n      margin:\"auto\",\n  }\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Home is mounted\");\n  }\n  render() {\n    const { classes } = this.props;\n    console.log(\"Home is rendered\");\n    return (\n      <div>\n        {/* <Paper elevation={1} square className={classes.paper}> */}\n            <div>\n          <Typography variant=\"h5\" className={classes.title}>Cars for rent</Typography>\n          <Rental/></div>\n        {/* </Paper> */}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Home);\n","import React,{Component } from 'react';\nimport {Router, Switch, Route} from 'react-router-dom';\nimport Home from '../Home';\nimport history from './History'\n\nexport default class Routes extends Component{\n\n    render() {\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    {/* <Route path=\"/About\" component={About} />\n                    <Route path=\"/Contact\" component={Contact} />\n                    <Route path=\"/Products\" component={Products} /> */}\n                </Switch>\n            </Router>\n        )\n    }\n}","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./Layout\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport Routes from \"./helpers/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Router>\n        <Header />\n        <Routes />\n        {/* <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n        </div> */}\n        {/* <Switch>\n          <Route Link ={}></Route>\n        </Switch> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}